#Long Term Improvements
    [ ] Change board representation to bitboards for all pieces
    [ ] Change move generation to use Magic Bitboards
    [ ] Clean up structure of source code
    [ ] Port to c++
    [ ] Add unittests for profiling
    [ ] Add pondering
    [ ] Implement python wrapper
    [ ] Tune parameter weights based on game stage

#C++ porting
    [x] Change i/o
    [x] Change from cstyle string ops to c++
    [x] Change from True/False enums to bool
    [ ] Avoid pointers and hide data representation of objects
    [ ] Use functions to access parts needed
    [ ] Piece class
        [ ] values
    [ ] Bitboard class
        [ ] set bit/ clear bit
    [ ] Board class
        [x] Change all references to S_BOARD members to Inline accessor functions
        [ ] Move functions from Init which initialise board into Position class
        [ ] Change how mirror board works to just create a new instance which gets destroyed
        [x] Refactor anything which takes a constant pointer to S_BOARD to take the value of a Position object
    [ ] Square class
        [ ] Represents each square on the board
        [ ] File 
        [ ] Rank
    [ ] Move class
        [ ] Include S_MOVE
        [ ] Include I/O representation
        [ ] Include undo
        [ ] Board.makemove/takemove should operate on this
    [ ] Hashtable
        [ ] More efficient storage of a move - 32bit to 16bit?
    [ ] Move generation
    [ ] Evaluation
    [ ] Unittesting
        [ ] Move all perft and debug stuff to proper unit tests
        [ ] Test move generation
        [ ] Test board functions
        [ ] Test search functions
        [ ] Test UCI protocol